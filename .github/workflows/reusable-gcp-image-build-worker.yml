name: "Build and Push Docker Image"

on:
  workflow_call:
    inputs:
      app_name:
        description: "Name of the application"
        required: true
        type: string
      k8s_ns:
        description: "Kubernetes namespace"
        required: true
        type: string
      target_environment:
        description: "Name of the environment (e.g. staging, production)"
        required: true
        type: string
      dockerfile_path:
        description: "Path to the Dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      dockerfile_context:
        description: "Path to the Docker build context"
        required: false
        default: "."
        type: string
      image_tag:
        type: string
        description: "The target image tag"
        required: true
      env_vars:
        type: string
        description: "Environment variables in KEY=VAL format"
        required: false
        default: ''
jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ inputs.target_environment == 'production' && 'story-product' || 'story-stage-product' }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ inputs.target_environment == 'production' && secrets.GCP_SERVICE_ACCOUNT_KEY_PROD || secrets.GCP_SERVICE_ACCOUNT_KEY_STAGING }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare env
        if: ${{ inputs.env_vars != '' }}
        run: |
          echo '${{ inputs.env_vars }}' > .env

      - name: Build and Push Docker Image
        run: |
          docker build \
            --push \
            --tag gcr.io/${GCP_PROJECT_ID}/${{ inputs.app_name }}:${{ inputs.image_tag }} \
            -f "${{ inputs.dockerfile_path }}" \
            "${{ inputs.dockerfile_context }}"
